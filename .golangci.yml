version: "2"

run:
  concurrency: 4
  timeout: 10m
  go: "1.24.5"

issues:
  max-issues-per-linter: 0 # No limit per linter
  max-same-issues: 0 # No limit on repeated issues

linters:
  default: all # Enable all linters to catch issues proactively
  disable:
    #  Disable linters that are noisy, stylistic, or unnecessary for early-stage projects
    - funlen # Warns on long functions — acceptable in handlers/usecases
    - lll # Line length check — often noisy and IDE handles wrapping
    - nestif # Warns on deep nested ifs — tolerable in some business logic
    - dupl # Warns on duplicate code — can create false positives in tests
    - dogsled # Warns on multiple blank identifiers (_) — often used in mocks/tests
    - nolintlint # Forces explanation for `//nolint` — strict, not always needed
    - testpackage # Enforces using a different package for tests — too strict
    - testableexamples # Warns if example tests are missing — rare use
    - testifylint # Lints how you use testify — can conflict with common patterns
    - nakedret # Warns on naked returns — stylistic, not critical
    - misspell # Catches spelling errors — can false flag non-English
    - mnd # Warns on magic numbers — noisy if not properly scoped
    - exhaustive # Requires exhaustive switch case — useful but verbose for simple enums
    - gochecknoglobals # Forbids global variables — too strict for config/constants
    - gochecknoinits # Forbids `init()` — common for DI or tool setup (e.g., wire)
    - gocognit # Warns on function complexity — already covered by gocyclo
    - cyclop # Similar to gocognit — redundant
    - wsl # Whitespace linter — stylistic
    - wrapcheck # Forces wrapped errors — not always needed in internal apps
    - zerologlint # Applies only if using zerolog — skip if not used
    - errname # Forces specific error variable naming — cosmetic
    - godot # Enforces period at end of comments — stylistic
    - godox # Flags TODO/FIXME without context — can be noisy
    - tagalign # Align tags
    - ireturn # return interface prefer for clean architecture
    - exhaustruct # Enforces struct fields to be ordered by name — useful for clean architecture
    - nlreturn
    - varnamelen
    - revive

  settings:
    depguard:
      rules:
        main:
          # Defines package matching behavior. Available modes:
          # - `original`: allowed if it doesn't match the deny list and either matches the allow list or the allow list is empty.
          # - `strict`: allowed only if it matches the allow list and either doesn't match the deny list or the allow rule is more specific (longer) than the deny rule.
          # - `lax`: allowed if it doesn't match the deny list or the allow rule is more specific (longer) than the deny rule.
          # Default: "original"
          list-mode: lax
          # List of file globs that will match this list of settings to compare against.
          # By default, if a path is relative, it is relative to the directory where the golangci-lint command is executed.
          # The placeholder '${base-path}' is substituted with a path relative to the mode defined with `run.relative-path-mode`.
          # The placeholder '${config-path}' is substituted with a path relative to the configuration file.
          # Default: $all
          files:
            - "!**/*_a _file.go"
          # List of allowed packages.
          # Entries can be a variable (starting with $), a string prefix, or an exact match (if ending with $).
          # Default: []
          allow:
            - $gostd
